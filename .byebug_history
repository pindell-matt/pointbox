exit
@user
@point
exit
@user
exit
params
exit
params
@reward = @user.rewards.new
@user = User.find(params[:user_id])
@user = _
User.find(params[:user_id])
params
exit
params
ls
params
@point
@user
exit
params
exit
params
exit
params
user
@user
@point
exit
@user
user
params
@user
exit
@user
point_params
@point
current_user
@user
params
@user
params
session
params
exit
User.find(332)
point_params
@point
@user
exit
@user
user
exit
@user
point_params
@point
@user
exit
params
exit
params
exit
params
session.include?("user")
session.include?("@user")
session
params
@user
user
exit
user
@user
params
exit
current_user
params
exit
exut
params
exit
params
exit
params
point_params
exit
validate !:user_id.empty?
exit
    params.require(:point).permit(:value, :user_id)
params
exit
params
exit
point.valid?
point = Point.new(point_params)
point_params = {"value" => "a", "user_id" => 1 }
point.valid?
point = Point.new(point_params)
point_params
exit
@point
@point.class.user_id
@point.class
exit
params.dig("point", "user_id")
params.dog("point", "user_id")
params
exit
points.where("value < 0").sum(:value).abs
points.value
points.values
exit
points.where("value < 0").sum(:value).abs
points.where("value < ?", 0).sum(:value).abs
points.where("value < ?", 0).sum(:value)
points.where("value < ?", 0).sum
points.where("value < ?", 0)
points.where("value > ?", 0)
points.where(value: -100..0)
points.where(value: -10)
points.where(value >= 10)
points.where(value: 10)
points
points.where(:value > "10")
points.where(value > 10)
points
points.where("value" > 0)
points.select(:value <= 0)
points.where(:value <= 0)
points
exit
params
user = User.find(point_params["user_id"])
point_params["user_id"]
point_params.user_id
point_params
user = User.find(point_params[:user_id)
point_params
User.first.points
User.first
Point.all
@user.points << @point
@user = User.find(@point.user_id)
params
User.find(params[:user_id]).points
params
exit
user.points
self
exit
params
exit
current_user.admin?
exit
current_user.admin?
current_user
exit
params
exit
reward.name
exit
reward.class
reward
continue
params
